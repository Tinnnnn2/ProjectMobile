<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#C9FFFFFF"
    tools:context=".FunctionsActivity">

    <TextView
        android:id="@+id/textView4"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="28dp"
        android:background="#E2A025"
        android:fontFamily="@font/tomorrow_bold"
        android:gravity="center"
        android:padding="16dp"
        android:text="Functions"
        android:textColor="#2E0B06"
        android:textSize="34sp"
        android:textStyle="bold"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/btnBackFunction"
        android:layout_width="68dp"
        android:layout_height="53dp"
        android:layout_marginStart="16dp"
        android:backgroundTint="#000000"
        android:drawableBottom="@android:drawable/ic_media_previous"
        app:layout_constraintBottom_toBottomOf="@+id/textView4"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="@id/textView4" />

    <ScrollView
        android:id="@+id/scrollViewFunction"
        android:layout_width="0dp"
        android:layout_height="620dp"
        android:fillViewport="false"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/textView4">

        <LinearLayout
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:background="#000000"
            android:orientation="vertical"
            android:padding="16dp"> <!-- ใส่สีพื้นหลังให้ LinearLayout ข้างใน -->

            <TextView
                android:id="@+id/textFunction1"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginTop="20dp"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="  ฟังก์ชันใน JavaScript \n
ฟังก์ชันใน JavaScript คือกลุ่มของโค้ดที่ถูกออกแบบมาเพื่อทำงานเฉพาะอย่างหนึ่ง\n
ฟังก์ชันใน JavaScript จะถูกเรียกใช้ (invoke) เมื่อมีบางสิ่งกระตุ้นให้มันทำงาน\n\n
ตัวอย่าง\n
// Function to compute the product of p1 and p2\n
function myFunction(p1, p2) {\n
  return p1 * p2;\n
}\n

"
                android:textSize="16sp" />

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginTop="20dp"
                >

                <TextView
                    android:id="@+id/textView18"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FFEB3B"
                    android:text="JavaScript Function Syntax"
                    android:textAlignment="center"
                    android:textColor="#000000"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </androidx.cardview.widget.CardView>

            <TextView
                android:id="@+id/textFunction2"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="
ฟังก์ชันใน JavaScript ถูกกำหนดโดยใช้คีย์เวิร์ด function ตามด้วยชื่อของฟังก์ชันและวงเล็บ ()\n
ชื่อของฟังก์ชันสามารถมีตัวอักษร, ตัวเลข, เครื่องหมายขีดล่าง _ และเครื่องหมายดอลลาร์ $ (ตามกฎเดียวกับตัวแปร)\n
ภายในวงเล็บสามารถมีค่าพารามิเตอร์ที่คั่นด้วยเครื่องหมายจุลภาค ,\n\n
โครงสร้าง\n
function name(parameter1, parameter2, parameter3) {\n
  // code to be executed\n
}\n
 พารามิเตอร์ของฟังก์ชันจะถูกกำหนดภายในวงเล็บ () เมื่อสร้างฟังก์ชัน\n
 อาร์กิวเมนต์คือค่าที่ถูกส่งให้กับฟังก์ชันเมื่อถูกเรียกใช้งาน\n
 ภายในฟังก์ชัน พารามิเตอร์จะทำงานเหมือนตัวแปรภายใน (local variables)\n
"
                android:textSize="16sp" />

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginTop="20dp"
                >

                <TextView
                    android:id="@+id/textView19"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FFEB3B"
                    android:text="Function Invocation"
                    android:textAlignment="center"
                    android:textColor="#000000"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </androidx.cardview.widget.CardView>

            <TextView
                android:id="@+id/textFunction3"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="
โค้ดภายในฟังก์ชันจะทำงานเมื่อมีการเรียกใช้ (invoke) ฟังก์ชัน เช่น\n
-เมื่อเกิดเหตุการณ์ (เช่น ผู้ใช้คลิกปุ่ม)\n
-เมื่อถูกเรียกใช้จากโค้ด JavaScript\n
-ทำงานอัตโนมัติ (Self-invoked)\n
"
                android:textSize="16sp" />

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginTop="20dp"
                >

                <TextView
                    android:id="@+id/textView23"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FFEB3B"
                    android:text="Function Return"
                    android:textAlignment="center"
                    android:textColor="#000000"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </androidx.cardview.widget.CardView>

            <TextView
                android:id="@+id/textFunction4"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="
เมื่อ JavaScript พบคำสั่ง return ฟังก์ชันจะหยุดทำงานทันที\n
ถ้าฟังก์ชันถูกเรียกจากคำสั่งใด JavaScript จะส่งค่าที่คืนมาจากฟังก์ชันไปยังตำแหน่งที่เรียกใช้\n\n
ตัวอย่าง :\n
// Function is called, the return value will end up in x\n
let x = myFunction(4, 3);\n
\n
function myFunction(a, b) {\n
// Function returns the product of a and b\n
  return a * b;\n
}\n\n
ทำไมต้องใช้ฟังก์ชัน?\n
ฟังก์ชันช่วยให้สามารถนำโค้ดกลับมาใช้ซ้ำได้\n
สามารถใช้โค้ดเดิมแต่เปลี่ยนอาร์กิวเมนต์เพื่อให้ได้ผลลัพธ์ที่แตกต่างกัน\n
"
                android:textSize="16sp" />

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginTop="20dp"
                >

                <TextView
                    android:id="@+id/textView24"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FFEB3B"
                    android:text="The () Operator"
                    android:textAlignment="center"
                    android:textColor="#000000"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </androidx.cardview.widget.CardView>

            <TextView
                android:id="@+id/textFunction5"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="
ตัวดำเนินการ () ใช้สำหรับเรียกใช้ฟังก์ชัน\n
ตัวอย่าง : แปลงอุณหภูมิจากฟาเรนไฮต์เป็นเซลเซียส\n
function toCelsius(fahrenheit) {\n
  return (5/9) * (fahrenheit-32);\n
}\n
\n
let value = toCelsius(77);\n
\n
คำเตือนเกี่ยวกับการเรียกใช้ฟังก์ชัน\n
หากเรียกใช้ฟังก์ชันโดยไม่มีอาร์กิวเมนต์ที่ถูกต้อง อาจได้ค่าที่ผิดพลาด :\n
function toCelsius(fahrenheit) {\n
  return (5/9) * (fahrenheit-32);\n
}\n
\n
let value = toCelsius();\n
\n
หากอ้างอิงฟังก์ชันโดยไม่มี () จะได้ตัวฟังก์ชันเองแทนผลลัพธ์ของมัน\n
function toCelsius(fahrenheit) {\n
  return (5/9) * (fahrenheit-32);\n
}\n
\n
let value = toCelsius;\n
จากตัวอย่างข้างต้น toCelsius หมายถึง อ็อบเจ็กต์ของฟังก์ชัน ในขณะที่ toCelsius() หมายถึง ค่าที่ได้จากการเรียกใช้ฟังก์ชัน\n
"
                android:textSize="16sp" />

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginTop="20dp"
                >

                <TextView
                    android:id="@+id/textView25"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FFEB3B"
                    android:text="Functions Used as Variable Values"
                    android:textAlignment="center"
                    android:textColor="#000000"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </androidx.cardview.widget.CardView>

            <TextView
                android:id="@+id/textFunction6"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="
 ฟังก์ชันที่ใช้เป็นค่าของตัวแปร\n
ฟังก์ชันสามารถใช้เป็นค่าของตัวแปรในนิพจน์, การกำหนดค่า และการคำนวณ\n
ตัวอย่าง : \n
let x = toCelsius(77);\n
let text = 'The temperature is ' + x + ' Celsius';\n
\n
หรือใช้ฟังก์ชันโดยตรงเป็นค่าของตัวแปร\n\n
let text = 'The temperature is ' + toCelsius(77) + ' Celsius';\n
"
                android:textSize="16sp" />

            <androidx.cardview.widget.CardView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_marginTop="20dp"
                >

                <TextView
                    android:id="@+id/textView26"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:background="#FFEB3B"
                    android:text="Local Variables"
                    android:textAlignment="center"
                    android:textColor="#000000"
                    android:textSize="20sp"
                    android:textStyle="bold" />
            </androidx.cardview.widget.CardView>

            <TextView
                android:id="@+id/textFunction7"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="#FFFFFF"
                android:padding="16dp"
                android:text="
ตัวแปรที่ถูกกำหนดภายในฟังก์ชันจะเป็น ตัวแปรภายใน (local variable) และสามารถเข้าถึงได้เฉพาะภายในฟังก์ชันนั้น\n
ตัวอย่าง :\n
// code here can NOT use carName\n
\n
function myFunction() {\n
  let carName = 'Volvo';\n
  // code here CAN use carName\n
}// code here can NOT use carName\n\n
ตัวแปรภายในจะถูกสร้างขึ้นเมื่อฟังก์ชันเริ่มทำงาน และจะถูกลบออกเมื่อฟังก์ชันทำงานเสร็จ
"
                android:textSize="16sp" />

        </LinearLayout>
</ScrollView>

    <ImageView
        android:id="@+id/imageView9"
        android:layout_width="73dp"
        android:layout_height="78dp"
        android:layout_marginEnd="4dp"
        app:layout_constraintBottom_toBottomOf="@+id/textView4"
        app:layout_constraintEnd_toEndOf="@+id/textView4"
        app:layout_constraintTop_toTopOf="@+id/textView4"
        app:srcCompat="@drawable/function_icon" />

</androidx.constraintlayout.widget.ConstraintLayout>